---
//@ts-nocheck
import Layout from "@src/layouts/layout.astro";
import Node from "@components/rich_text/node.astro";
import {
    defaultComponents,
    defaultBlockComponents,
} from "@components/rich_text/default_components";
import type { Image } from "@lib/types";
import type { Page, Product } from "@lib/types";
import Gallery from "@components/ecommerce/product/gallery.astro";
import { displayPrice } from "@lib/price";
import AddItemToOrder from "@components/ecommerce/product/add_item_to_order.svelte";
import { getImage } from "astro:assets";

export async function getStaticPaths() {
    try {
        const params = new URLSearchParams({
            limit: "100",
        });

        const response = await fetch(
            `${import.meta.env.PUBLIC_PAYLOAD_API_URL}/products?${params}`,
            {
                headers: {
                    Authorization: `users API-Key ${import.meta.env.PAYLOAD_API_TOKEN}`,
                },
            },
        ).then((r) => r.json());

        const pages = response.docs.map((item) => ({
            params: { slug: item.slug },
            props: {
                product: item,
            },
        }));

        return pages;
    } catch (err) {
        console.log(err);
    }
}

interface Props {
    product: Product;
}

const { product } = Astro.props;
---

<Layout title={product.title || product.title}>
    <div class="grid grid-cols-2 max-w-4xl m-auto">
        <div>
            <Gallery images={product.images} />
        </div>
        <div class="flex flex-col">
            <h1 class="text-2xl text-center md:text-4xl m-2">{product.title}</h1>
            <span>{displayPrice(product.price)}</span>
            <AddItemToOrder client:load product={product} />
        </div>
    </div>
</Layout>
